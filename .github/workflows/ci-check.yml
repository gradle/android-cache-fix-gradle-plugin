# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master, citest ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  generate_versions:
    runs-on: ubuntu-latest

    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    -   uses: actions/checkout@v1

    # Gradle build
    -   uses: gradle/gradle-build-action@releases/v2
        with:
            arguments: generateTestTasksJson -I gradle/buildScanInit.gradle

    -   id: setup-matrix
        run: echo "::set-output name=matrix::$(cat build/build-resources/androidTestTasks.json)"

    -   name: debug
        run: echo ${{ steps.setup-matrix.outputs.matrix }}

    outputs:
        matrix: ${{ steps.setup-matrix.outputs.matrix }}

  sanity_check:
    runs-on: ubuntu-latest

    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    -   uses: actions/checkout@v1

    # Sets up the NDK required by AGP 3.6.x
    -   name: NDK Cache
        id: ndk-cache
        uses: actions/cache@v2
        with:
          path: /usr/local/lib/android/sdk/ndk/20.0.5594570
          key: ndk-cache-20.0.5594570
    -   name: Setup NDK
        if: steps.ndk-cache.outputs.cache-hit != 'true'
        run: sudo $ANDROID_HOME/tools/bin/sdkmanager 'ndk;20.0.5594570'

    # Use Java 8
    -   uses: actions/setup-java@v1
        with:
            java-version: 8

    # Gradle build
    -   uses: gradle/gradle-build-action@releases/v2
        with:
            arguments: sanityCheck -I gradle/buildScanInit.gradle

  android_version_tests:
    needs: [generate_versions, sanity_check]

    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        androidTestTask: ${{ fromJson(needs.generate_versions.outputs.matrix) }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    -   uses: actions/checkout@v1

    # Sets up the NDK required by AGP 3.6.x
    -   name: NDK Cache
        id: ndk-cache
        uses: actions/cache@v2
        with:
          path: /usr/local/lib/android/sdk/ndk/20.0.5594570
          key: ndk-cache-20.0.5594570
    -   name: Setup NDK
        if: steps.ndk-cache.outputs.cache-hit != 'true'
        run: sudo $ANDROID_HOME/tools/bin/sdkmanager 'ndk;20.0.5594570'

    # Patch issue in platform-tools 31.0.3 where platform-tools/api/api-versions.xml is missing (see https://issuetracker.google.com/issues/195445762)
    -   name: Patch api-versions
        run: sudo test -f $ANDROID_HOME/platform-tools/api/api-versions.xml || (sudo mkdir $ANDROID_HOME/platform-tools/api && sudo cp .github/api-versions.xml $ANDROID_HOME/platform-tools/api/api-versions.xml)

    # List all installed Android SDK packages (for troubleshooting)
    -   name: List Android Packages
        run: sudo $ANDROID_HOME/tools/bin/sdkmanager --list | sed -n '/Available Packages/q;p'

    # Use Java 8
    -   uses: actions/setup-java@v1
        with:
            java-version: 8

    # Gradle build
    - uses: gradle/gradle-build-action@releases/v2
      with:
        arguments: ${{ matrix.androidTestTask }} -I gradle/buildScanInit.gradle

