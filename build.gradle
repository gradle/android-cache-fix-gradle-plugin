import groovy.json.JsonBuilder

buildscript {
    repositories {
        maven {
            url = "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.gradle.publish:plugin-publish-plugin:0.9.9"
    }
}

apply plugin: 'groovy'
apply plugin: 'java-gradle-plugin'
apply plugin: 'codenarc'

apply plugin: "com.gradle.plugin-publish"

group = "org.gradle.android"
version = ["git", "describe", "--match", "[0-9]*", "--dirty"].execute().text.trim()

// Maps supported Android plugin versions to the versions of Gradle that support it
def supportedVersions = [
    "4.0.0-beta04": ["6.1.1", "6.2.2", "6.3", "6.4-20200415131233+0000"],
    "3.6.3": ["5.6.4", "6.0.1", "6.1.1", "6.2.2", "6.3", "6.4-20200415131233+0000"],
    "3.6.2": ["5.6.4"],
    "3.6.1": ["5.6.4"],
    "3.6.0": ["5.6.4"],
    "3.5.3": ["5.4.1", "5.5.1", "5.6.4", "6.0.1", "6.1.1", "6.2.2", "6.3", "6.4-20200415131233+0000"],
    "3.5.2": ["5.4.1"],
    "3.5.1": ["5.4.1"],
    "3.5.0": ["5.4.1"]
]

repositories {
    google()
    jcenter()
}

dependencies {
    compileOnly 'com.android.tools.build:gradle:3.5.0'
    compile 'com.google.guava:guava:22.0'
    compile gradleApi()
    testCompile 'com.android.tools.build:gradle:3.5.0'
    testCompile gradleTestKit()
    testCompile "junit:junit:4.12"
    testCompile "org.spockframework:spock-core:1.1-groovy-2.4@jar"
    testRuntime 'cglib:cglib-nodep:3.2.12'
    testRuntime 'org.objenesis:objenesis:3.1'
}

sourceCompatibility = "1.7"
targetCompatibility = "1.7"

def generatedResources = "$buildDir/generated-resources/main"

task generateVersions {
    def outputFile = file("$generatedResources/versions.json")
    inputs.property "version", version
    inputs.property "supportedVersions", supportedVersions
    outputs.dir generatedResources
    doLast {
        outputFile.text = new JsonBuilder([
            version: version,
            supportedVersions: supportedVersions
        ]).toPrettyString()
    }
}

sourceSets {
    main {
        output.dir(generatedResources, builtBy: generateVersions)
    }
}

pluginBundle {
    website = 'https://github.com/gradle/android-cache-fix-gradle-plugin'
    vcsUrl = 'https://github.com/gradle/android-cache-fix-gradle-plugin'

    description = 'Gradle plugin to fix Android caching problems'

    plugins {
        androidCacheFixPlugin {
            id = 'org.gradle.android.cache-fix'
            displayName = 'Gradle Android cache fix plugin'
            tags = ['android', 'cache', 'fix']
            version = project.version
        }
    }
}

def localRepo = file("$buildDir/local-repo")

artifacts {
    runtime jar
}

task install(type: Upload) {
    repositories {
        ivy {
            url = localRepo.toURI()
        }
    }
    descriptorDestination = file("$buildDir/ivy/ivy.xml")
    uploadDescriptor = true
    configuration = configurations.runtime
}

def travis = System.getenv("TRAVIS") == "true"

test {
    dependsOn install
    systemProperty "local.repo", localRepo.toURI()
    systemProperty "travis", travis
    if (travis) {
        testLogging.showStandardStreams = true
    }
}

if (!JavaVersion.current().java8) {
    throw new RuntimeException("Java 8 is required to execute the build")
}
